<com.slegl.push.MainReceiver: void a(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<net.cadegessdad.iad.d.n: org.apache.http.Header a(java.lang.String...)>	Permission:android.permission.INTERNET
<com.umeng.common.b: java.lang.String f(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.slegl.push.MainReceiver: void a(android.app.Service,int)>	Permission:android.permission.WAKE_LOCK
<com.doodlemobile.gamecenter.facebook.stream.Dispatcher: void showWebView()>	Permission:android.permission.INTERNET
<com.slegl.push.MainReceiver: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.umeng.common.b: android.location.Location l(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.slegl.push.MainReceiver: void a()>	Permission:android.permission.WAKE_LOCK
<com.facebook.android.Util: java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle)throwsjava.net.MalformedURLException,java.io.IOException>	Permission:android.permission.INTERNET
<com.umeng.common.net.DownloadingService$a: public com.umeng.common.net.DownloadingService$a(com.umeng.common.net.DownloadingService,android.content.Context,com.umeng.common.net.a$a)>	Permission:android.permission.VIBRATE
<net.cadegessdad.iad.d.q: int b(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.common.b: boolean m(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.common.b: java.lang.String q(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<net.cadegessdad.iad.d.a: android.graphics.Bitmap a(java.lang.String)>	Permission:android.permission.INTERNET
<net.cadegessdad.iad.d.s: void a(android.content.Context,int,int,java.lang.String,java.lang.String)>	Permission:android.permission.VIBRATE
<com.umeng.analytics.e: java.lang.String a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.doodlemobile.gamecenter.DoodleMobileAnaylise$Sync: void run()>	Permission:android.permission.INTERNET
<com.doodlemobile.gamecenter.GameAdActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.umeng.common.net.i: java.lang.String a(android.content.Context,java.lang.String)>	Permission:android.permission.INTERNET
<com.slegl.push.s: java.lang.String a(double,double)>	Permission:android.permission.INTERNET
<com.doodlemobile.gamecenter.DoodleMobileAnaylise$SessionPolling: boolean isTopTask()>	Permission:android.permission.GET_TASKS
<com.slegl.push.s: java.lang.String o(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.flurry.android.CatalogActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.doodlemobile.gamecenter.DoodleMobileAnaylise$MobclixHttpClient: org.apache.http.HttpResponse execute()throwsorg.apache.http.client.ClientProtocolException,java.io.IOException>	Permission:android.permission.INTERNET
<com.slegl.push.b: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<com.umeng.common.b: java.lang.String[] j(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.doodlemobile.gamecenter.featurescreen.DownloadFeatureScreenImage: boolean isNetworkAvailable(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.common.net.d: void handleMessage(android.os.Message)>	Permission:android.permission.VIBRATE
<net.cadegessdad.iad.d.q: void a(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE	Permission:android.permission.ACCESS_WIFI_STATE
<com.doodlemobile.gamecenter.DoodleMobileSettings: java.lang.String getMacAddress()>	Permission:android.permission.ACCESS_WIFI_STATE
<com.slegl.push.j: protected com.slegl.push.j(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.slegl.push.s: void a(android.content.Context,android.content.Intent,int,com.slegl.push.u,int,boolean,boolean)>	Permission:android.permission.VIBRATE
<net.cadegessdad.iad.d.t: void b(android.content.Context,java.lang.String)>	Permission:android.permission.INTERNET
<com.doodlemobile.gamecenter.DoodleMobileLocation: boolean getLocation(android.content.Context,com.doodlemobile.gamecenter.DoodleMobileLocation$LocationResult)>	Permission:android.permission.ACCESS_FINE_LOCATION
<net.cadegessdad.iad.d.q: java.lang.String d()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.slegl.push.s: android.location.Location k(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION	Permission:android.permission.INTERNET
<net.cadegessdad.iad.d.s: java.lang.Void a(android.content.Context,net.cadegessdad.iad.c.f)>	Permission:android.permission.VIBRATE
<com.slegl.push.b.b: com.slegl.push.b.d k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.slegl.push.l: void a(java.util.Map)>	Permission:android.permission.INTERNET
<com.slegl.push.b: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.slegl.push.b.b: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.doodlemobile.gamecenter.DoodleMobileLocation$GetLastLocation: void run()>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.slegl.push.b: java.lang.String c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<net.cadegessdad.iad.d.b: boolean a()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.doodlemobile.gamecenter.featuregames.FeatureGamesFactory: boolean isNetworkAvailable(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<net.cadegessdad.iad.d.s: void a(android.content.Context,int,int,java.lang.String,java.lang.String,java.lang.String,android.content.Intent)>	Permission:android.permission.VIBRATE
<com.doodlemobile.gamecenter.model.GameCenterPrefences: boolean isNetworkAvailable(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
