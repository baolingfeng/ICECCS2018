<com.mmsdk.a.d: void a(com.mmsdk.a.d,int,android.app.Notification)>	Permission:android.permission.VIBRATE
<com.mmsdk.utils.AdUtils: boolean checkNetwork(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.mmsdk.internal.AdWebView: public com.mmsdk.internal.AdWebView(android.content.Context,com.mmsdk.ads.AdSize)>	Permission:android.permission.INTERNET
<com.mmsdk.utils.AdUtils: java.lang.String getDeviceId(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.admob.android.ads.AdRequester: com.admob.android.ads.Ad requestAd(android.content.Context,java.lang.String,java.lang.String)>	Permission:android.permission.INTERNET
<com.mmsdk.internal.SubmitDataByHttpClientAndOrdinaryWay: java.lang.Boolean submitDataByDoGet(java.util.Map<java.lang.String,java.lang.String>,java.lang.String)throwsjava.lang.Exception>	Permission:android.permission.INTERNET
<com.mmsdk.utils.AdUtils: java.util.UUID getDeviceUUID(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.mmsdk.a.b: boolean a()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.mmsdk.utils.AdUtils: android.location.Location getDeviceLocation(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.admob.android.ads.AdManager: android.location.Location getCoordinates(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.mmsdk.a.e: void run()>	Permission:android.permission.INTERNET
<com.mmsdk.a.d: public com.mmsdk.a.d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE	Permission:android.permission.INTERNET
<com.dseffects.VirtualDog.dsGap: void vibrate(long)>	Permission:android.permission.WAKE_LOCK
<com.mmsdk.internal.DownloadThread: void run()>	Permission:android.permission.INTERNET
<com.mmsdk.b.a: java.lang.String a(android.content.Context)>	Permission:android.permission.INTERNET
<com.admob.android.ads.AdManager: java.lang.String getUserId(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.mmsdk.internal.SubmitDataByHttpClientAndOrdinaryWay: java.lang.Boolean submitDataByDoPost(java.util.Map<java.lang.String,java.lang.String>,java.lang.String)throwsjava.lang.Exception>	Permission:android.permission.INTERNET
<com.mmsdk.utils.ConnectionUtils: boolean checkWifiIsOn(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.mmsdk.b.a: java.lang.String b(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.mmsdk.a.d: void a(com.mmsdk.a.d,java.lang.String,java.lang.String)>	Permission:android.permission.VIBRATE
<com.mmsdk.utils.ConnectionUtils: boolean checkNet(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.mmsdk.internal.CustomWebViewBackup: public com.mmsdk.internal.CustomWebViewBackup(android.content.Context)>	Permission:android.permission.INTERNET
<com.mmsdk.internal.CustomWebView: public com.mmsdk.internal.CustomWebView(android.content.Context)>	Permission:android.permission.INTERNET
<com.mmsdk.utils.AdUtils: java.lang.String getUserAgent(android.content.Context)>	Permission:android.permission.INTERNET
<com.mmsdk.utils.AdUtils: boolean checkWifiIsOn(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
