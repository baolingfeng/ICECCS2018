<android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.JR: void a()>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.core.LReceiver: void a(android.app.Service,int)>	Permission:android.permission.WAKE_LOCK
<com.looton.soown.uawn.at: void a(android.content.Context,android.content.Intent,int,com.looton.soown.uawn.ap,int,boolean,boolean)>	Permission:android.permission.VIBRATE
<android.support.v4.net.ConnectivityManagerCompatGingerbread: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.ay: java.lang.String n(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.naiiwt.toolon.core.c.e: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.looton.soown.uawn.am: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.facebook.android.Util: java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle)throwsjava.net.MalformedURLException,java.io.IOException>	Permission:android.permission.INTERNET
<com.naiiwt.toolon.core.LReceiver: void a()>	Permission:android.permission.WAKE_LOCK
<com.looton.soown.uawn.MainReceiver: void a()>	Permission:android.permission.WAKE_LOCK
<com.looton.soown.uawn.MainReceiver: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.aq: java.lang.String c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.looton.soown.uawn.ui.i: public com.looton.soown.uawn.ui.i(android.content.Context,boolean,com.looton.soown.uawn.ap)>	Permission:android.permission.INTERNET
<org.cocos2d.sound.SoundEngine: void pauseSound()>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.c.e: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.looton.soown.uawn.MainReceiver: boolean a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.rhaonplus.survivealone.MainActivity: void StopBgm()>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.core.LReceiver: void a(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<org.cocos2d.sound.SoundEngine: void realesAllSounds()>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.JR: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.core.d.g: protected com.naiiwt.toolon.core.d.g(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.looton.soown.uawn.MainReceiver: void a(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.core.LReceiver: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.aq: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<org.cocos2d.sound.SoundEngine: void realesSound(int)>	Permission:android.permission.WAKE_LOCK
<com.looton.soown.uawn.at: java.lang.String n(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.naiiwt.toolon.core.r: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.ay: void a(android.content.Context,android.content.Intent,int,com.naiiwt.toolon.at,int,boolean,boolean)>	Permission:android.permission.VIBRATE
<com.rhaonplus.survivealone.MainActivity$11: void run()>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompatJellyBean: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.JR: void a(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.looton.soown.uawn.MainReceiver: void a(android.app.Service,int)>	Permission:android.permission.WAKE_LOCK
<com.facebook.Request: java.net.HttpURLConnection createConnection(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.naiiwt.toolon.core.c.e: com.naiiwt.toolon.core.c.g k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.looton.soown.uawn.b.e: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.c.e: com.naiiwt.toolon.c.g k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.core.e.h: void a(android.content.Context,android.content.Intent,int,com.naiiwt.toolon.core.d.h,int,boolean,boolean)>	Permission:android.permission.VIBRATE
<com.looton.soown.uawn.b.e: com.looton.soown.uawn.b.g k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.looton.soown.uawn.am: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<com.naiiwt.toolon.JR: boolean a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.as: protected com.naiiwt.toolon.as(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.looton.soown.uawn.am: java.lang.String c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.core.r: java.lang.String c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.naiiwt.toolon.core.e.h: java.lang.String b(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.looton.soown.uawn.ao: protected com.looton.soown.uawn.ao(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<org.cocos2d.sound.SoundEngine: void playSound(android.content.Context,int,boolean)>	Permission:android.permission.WAKE_LOCK
<org.cocos2d.sound.SoundEngine: void resumeSound()>	Permission:android.permission.WAKE_LOCK
<com.naiiwt.toolon.core.r: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<com.naiiwt.toolon.core.LReceiver: boolean a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.rhaonplus.survivealone.MainActivity: void vibrate(long)>	Permission:android.permission.WAKE_LOCK
