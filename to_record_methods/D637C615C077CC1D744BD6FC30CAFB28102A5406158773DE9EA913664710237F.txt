<android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.startapp.android.publish.HtmlAd: boolean doHome()>	Permission:android.permission.GET_TASKS
<com.tapcontext.ImageManager$1: java.lang.Object call()throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.startapp.android.publish.list3d.List3DActivity$2: void onItemClick(android.widget.AdapterView<?>,android.view.View,int,long)>	Permission:android.permission.INTERNET
<org.apache.cordova.CordovaWebView: public org.apache.cordova.CordovaWebView(android.content.Context,android.util.AttributeSet)>	Permission:android.permission.INTERNET
<android.support.v4.net.ConnectivityManagerCompatGingerbread: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.startapp.android.publish.banner.bannerstandard.BannerStandard: public com.startapp.android.publish.banner.bannerstandard.BannerStandard(android.content.Context,boolean)>	Permission:android.permission.INTERNET
<com.google.tagmanager.HttpUrlConnectionNetworkClient: java.net.HttpURLConnection getUrlConnection(java.lang.String)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.tapcontext.BannerAdView$1:  com.tapcontext.BannerAdView$1(com.tapcontext.BannerAdView,android.content.Context)>	Permission:android.permission.INTERNET
<com.startapp.android.eula.b.i: java.lang.String b(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<android.support.v4.content.WakefulBroadcastReceiver: boolean completeWakefulIntent(android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.startapp.android.eula.EULAActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.startapp.android.publish.d.d: android.graphics.Bitmap a(java.lang.String)>	Permission:android.permission.INTERNET
<com.tapcontext.TapContextService: void onDestroy()>	Permission:android.permission.WAKE_LOCK
<com.startapp.android.publish.d.l: void a(android.content.Context,java.lang.String,int,java.lang.Runnable)>	Permission:android.permission.INTERNET
<com.google.analytics.tracking.android.SimpleNetworkDispatcher: boolean okToDispatch()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.tapcontext.MraidAdView$3: void run()>	Permission:android.permission.INTERNET
<com.startapp.android.publish.AppWallDelegateActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<org.apache.cordova.dialogs.Notification: void beep(long)>	Permission:android.permission.WAKE_LOCK
<org.apache.cordova.CordovaWebView: public org.apache.cordova.CordovaWebView(android.content.Context,android.util.AttributeSet,int)>	Permission:android.permission.INTERNET
<android.support.v4.content.WakefulBroadcastReceiver: android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.startapp.android.publish.banner.bannerstandard.BannerStandard: public com.startapp.android.publish.banner.bannerstandard.BannerStandard(android.content.Context,android.util.AttributeSet)>	Permission:android.permission.INTERNET
<com.tapcontext.SignalBarCollector$1: void run()>	Permission:android.permission.ACCESS_COARSE_LOCATION
<com.tapcontext.analytics.tcmetrics.SystemInformation: java.lang.Boolean isWifiConnected()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.startapp.android.publish.d.l: boolean a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.tapcontext.TapAlertDialog: android.app.Dialog getDialog()>	Permission:android.permission.INTERNET
<com.tapcontext.ScanAd: android.view.View getView()>	Permission:android.permission.INTERNET
<com.startapp.android.publish.Ad: boolean load(com.startapp.android.publish.model.AdPreferences,com.startapp.android.publish.AdEventListener)>	Permission:android.permission.INTERNET
<com.startapp.android.publish.list3d.g$5: void onItemClick(android.widget.AdapterView<?>,android.view.View,int,long)>	Permission:android.permission.INTERNET
<com.tapcontext.DeviceUuidFactory: public com.tapcontext.DeviceUuidFactory(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.startapp.android.publish.b: boolean c()>	Permission:android.permission.GET_TASKS
<android.support.v4.net.ConnectivityManagerCompatJellyBean: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.startapp.android.publish.banner.bannerstandard.BannerStandard: public com.startapp.android.publish.banner.bannerstandard.BannerStandard(android.content.Context,android.util.AttributeSet,int)>	Permission:android.permission.INTERNET
<com.tapcontext.EulaDialog: android.app.Dialog getDialog()>	Permission:android.permission.INTERNET
<com.google.tagmanager.SimpleNetworkDispatcher: boolean okToDispatch()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.startapp.android.publish.banner.bannerstandard.BannerStandard: public com.startapp.android.publish.banner.bannerstandard.BannerStandard(android.content.Context)>	Permission:android.permission.INTERNET
<com.startapp.android.publish.b.g: void a(java.lang.Boolean)>	Permission:android.permission.INTERNET
<com.tapcontext.DeviceInfoExtraEvaluator: void evaluate(org.json.JSONObject)throwsorg.json.JSONException>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.tapcontext.MraidAdView: public com.tapcontext.MraidAdView(android.content.Context,com.tapcontext.MoPubView,com.tapcontext.BannerAd)>	Permission:android.permission.INTERNET
<org.apache.cordova.CordovaWebView: public org.apache.cordova.CordovaWebView(android.content.Context)>	Permission:android.permission.INTERNET
<org.apache.cordova.CordovaWebView: public org.apache.cordova.CordovaWebView(android.content.Context,android.util.AttributeSet,int,boolean)>	Permission:android.permission.INTERNET
<com.google.tagmanager.HttpUrlConnectionNetworkClient: void sendPostRequest(java.lang.String,byte[])throwsjava.io.IOException>	Permission:android.permission.INTERNET
<android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.tapcontext.TapContextSDK: void showNotification(android.content.Context,int,android.app.PendingIntent,android.os.Bundle,android.os.Bundle)>	Permission:android.permission.VIBRATE
