<com.downjoy.android.dmcs.dmservice.ReconnectManager: public com.downjoy.android.dmcs.dmservice.ReconnectManager(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.moyoyo.trade.assistor.ui.UpgradeActivity: void startDown()>	Permission:android.permission.WRITE_EXTERNAL_STORAGE
<org.jivesoftware.smack.XMPPConnection: void releaseWakeLock(java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.downjoy.android.dmcs.dmservice.AndroidEndpoint: boolean ensureRouteOverMobileHipriNetworkInterface()>	Permission:android.permission.CHANGE_NETWORK_STATE
<com.moyoyo.trade.assistor.util.NoticeManager: void noticeTop(java.lang.String,java.lang.String,android.content.Intent,android.content.Context)>	Permission:android.permission.VIBRATE
<com.umeng.common.net.d$b: void a(java.lang.Integer)>	Permission:android.permission.VIBRATE
<com.downjoy.android.dmcs.dmservice.Endpoint: void releaseAsyncWakeLock()>	Permission:android.permission.WAKE_LOCK
<com.umeng.common.b: java.lang.String[] k(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.common.b: boolean n(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.downjoy.android.dmcs.dmservice.Endpoint: void releaseSimpleWakeLock(java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.downjoy.android.dmcs.Settings: java.lang.String getDeviceId()>	Permission:android.permission.READ_PHONE_STATE
<com.umeng.common.net.d: void b(android.content.Context,android.app.Notification,int)>	Permission:android.permission.VIBRATE
<com.downjoy.android.base.util.Alarm: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.util.SensorManagerHelper: void onSensorChanged(android.hardware.SensorEvent)>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.util.Utils: boolean isWifi()>	Permission:android.permission.ACCESS_WIFI_STATE
<com.umeng.common.net.q: java.lang.String a(android.content.Context,java.lang.String)>	Permission:android.permission.INTERNET
<com.moyoyo.trade.assistor.util.DialogHelper: void showImageIMWebViewDialog(java.lang.String)>	Permission:android.permission.INTERNET
<com.moyoyo.trade.assistor.util.NoticeManager: android.media.Ringtone getDefaultRingtone(android.content.Context,int)>	Permission:android.permission.WAKE_LOCK
<com.downjoy.android.dmcs.dmservice.ReconnectManager: boolean pollNetworkAvailable()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.downjoy.android.dmcs.dmservice.ReconnectManager: void networkStateChanged(android.net.NetworkInfo,long,long)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.analytics.h: java.lang.String a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.umeng.common.net.g: void a(int,java.lang.Exception)>	Permission:android.permission.VIBRATE
<org.jivesoftware.smack.XMPPConnection: void acquireWakeLock(java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.data.api.ApiContext: com.moyoyo.trade.assistor.data.api.ApiContext create(java.lang.String)>	Permission:android.permission.READ_PHONE_STATE
<com.umeng.common.net.g: void a(int)>	Permission:android.permission.VIBRATE
<com.umeng.common.net.f: void handleMessage(android.os.Message)>	Permission:android.permission.VIBRATE
<com.moyoyo.trade.assistor.alipay.NetworkManager: boolean urlDownloadToFile(android.content.Context,java.lang.String,java.lang.String)>	Permission:android.permission.INTERNET
<com.moyoyo.trade.assistor.util.NoticeManager: void PlayRingTone(android.content.Context,int)>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.MoyoyoApp: boolean isNotBackgroundRunning()>	Permission:android.permission.GET_TASKS
<com.umeng.common.net.d: void a(android.content.Context,android.app.Notification,int)>	Permission:android.permission.VIBRATE
<com.moyoyo.trade.assistor.util.NoticeManager$1: void run()>	Permission:android.permission.VIBRATE
<com.umeng.common.b: java.lang.String r(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<com.downjoy.android.dmcs.dmservice.Endpoint: void acquireAsyncWakeLock()>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.alipay.NetworkManager: java.lang.String SendAndWaitResponse(java.lang.String,java.lang.String)>	Permission:android.permission.INTERNET
<com.umeng.common.net.g: void a(int,int)>	Permission:android.permission.VIBRATE
<com.downjoy.android.dmcs.dmservice.Endpoint: void acquireSimpleWakeLock(java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.umeng.common.b: java.lang.String g(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.downjoy.android.base.app.BaseApp: void initNumber(android.telephony.TelephonyManager)>	Permission:android.permission.READ_PHONE_STATE
<com.umeng.common.b: android.location.Location m(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.downjoy.android.dmcs.dmservice.Alarm: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.moyoyo.trade.assistor.util.Utils: boolean isNetworkConnected(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.downjoy.android.dmcs.dmservice.ReconnectManager: boolean isNetworkAvailable()>	Permission:android.permission.ACCESS_NETWORK_STATE
