<android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.google.android.gms.maps.model.UrlTileProvider: com.google.android.gms.maps.model.Tile getTile(int,int,int)>	Permission:android.permission.INTERNET
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>	Permission:android.permission.INTERNET
<android.support.v4.net.ConnectivityManagerCompatGingerbread: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.swarmconnect.by$a: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>	Permission:android.permission.INTERNET
<org.andengine.audio.music.Music: void play()throwsorg.andengine.audio.music.exception.MusicReleasedException>	Permission:android.permission.WAKE_LOCK
<org.andengine.extension.multiplayer.protocol.shared.BluetoothSocketConnection: public org.andengine.extension.multiplayer.protocol.shared.BluetoothSocketConnection(android.bluetooth.BluetoothDevice,java.lang.String)throwsjava.io.IOException,org.andengine.extension.multiplayer.protocol.exception.BluetoothException>	Permission:android.permission.BLUETOOTH
<com.google.ads.internal.AdVideoView: void b()>	Permission:android.permission.WAKE_LOCK
<com.google.ads.internal.AdVideoView: void c()>	Permission:android.permission.WAKE_LOCK
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: boolean isWifiIPAddressValid(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<org.andengine.extension.multiplayer.protocol.server.SocketServerDiscoveryServer: void onStart()throwsjava.net.SocketException>	Permission:android.permission.INTERNET
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: byte[] getBroadcastIPAddressRaw(android.content.Context)throwsorg.andengine.extension.multiplayer.protocol.exception.WifiException>	Permission:android.permission.ACCESS_WIFI_STATE
<com.google.ads.ae: java.net.HttpURLConnection a(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.google.ads.internal.j: java.net.HttpURLConnection a(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<org.andengine.audio.music.Music: void resume()throwsorg.andengine.audio.music.exception.MusicReleasedException>	Permission:android.permission.WAKE_LOCK
<org.andengine.audio.music.Music: void pause()throwsorg.andengine.audio.music.exception.MusicReleasedException>	Permission:android.permission.WAKE_LOCK
<com.google.ads.ae: void run()>	Permission:android.permission.INTERNET
<com.google.android.gms.auth.GoogleAuthUtil: void invalidateToken(android.content.Context,java.lang.String)>	Permission:android.permission.MANAGE_ACCOUNTS
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.google.ads.internal.AdVideoView: void d()>	Permission:android.permission.WAKE_LOCK
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: void releaseMulticastLock(android.net.wifi.WifiManager$MulticastLock)>	Permission:android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.swarmconnect.utils.GeoUtils: void getNonblockGeo(android.content.Context,com.swarmconnect.utils.GeoUtils$GotGeoCB)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.swarmconnect.cq: java.lang.String connectToURL(java.lang.String,java.lang.String)>	Permission:android.permission.INTERNET
<com.swarmconnect.at$a: public com.swarmconnect.at$a(com.swarmconnect.at,android.content.Context,android.util.AttributeSet,int)>	Permission:android.permission.INTERNET
<org.andengine.engine.Engine: void enableLocationSensor(android.content.Context,org.andengine.input.sensor.location.ILocationListener,org.andengine.input.sensor.location.LocationSensorOptions)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.google.ads.internal.AdVideoView: void e()>	Permission:android.permission.WAKE_LOCK
<org.andengine.audio.music.Music: void release()throwsorg.andengine.audio.music.exception.MusicReleasedException>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompatJellyBean: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.onepixelarmy.fastball.MainActivity: boolean hasInternet()>	Permission:android.permission.ACCESS_NETWORK_STATE
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: android.net.wifi.WifiManager$MulticastLock aquireMulticastLock(android.content.Context,java.lang.String)>	Permission:android.permission.CHANGE_WIFI_MULTICAST_STATE
<com.swarmconnect.at$a: public com.swarmconnect.at$a(com.swarmconnect.at,android.content.Context)>	Permission:android.permission.INTERNET
<com.swarmconnect.dc$a: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>	Permission:android.permission.VIBRATE
<com.google.ads.internal.f$1: java.net.HttpURLConnection a(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<org.andengine.extension.multiplayer.protocol.server.BluetoothSocketServer: void onStart()throwsjava.io.IOException>	Permission:android.permission.BLUETOOTH
<org.andengine.engine.Engine: void vibrate(long[],int)throwsjava.lang.IllegalStateException>	Permission:android.permission.VIBRATE
<org.andengine.engine.Engine: void vibrate(long)throwsjava.lang.IllegalStateException>	Permission:android.permission.WAKE_LOCK
<com.swarmconnect.cl: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<org.andengine.audio.music.Music: void stop()throwsorg.andengine.audio.music.exception.MusicReleasedException>	Permission:android.permission.WAKE_LOCK
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: boolean isWifiEnabled(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: java.lang.String getWifiSSID(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<org.andengine.extension.multiplayer.protocol.util.WifiUtils: byte[] getWifiIPv4AddressRaw(android.content.Context)>	Permission:android.permission.ACCESS_WIFI_STATE
<com.google.ads.internal.AdWebView: public com.google.ads.internal.AdWebView(com.google.ads.n,com.google.ads.AdSize)>	Permission:android.permission.INTERNET
<com.swarmconnect.at$a: public com.swarmconnect.at$a(com.swarmconnect.at,android.content.Context,android.util.AttributeSet)>	Permission:android.permission.INTERNET
<android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
