<net.daum.adam.publisher.impl.c.p: public net.daum.adam.publisher.impl.c.p(android.content.Context,net.daum.adam.publisher.impl.c.p$a,net.daum.adam.publisher.impl.c.p$c,net.daum.adam.publisher.impl.c.p$k)>	Permission:android.permission.INTERNET
<com.google.ads.internal.AdVideoView: void c()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.impl.IMNiceInfo$1: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.ACCESS_WIFI_STATE
<org.anddev.andengine.audio.music.Music: void stop()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.impl.IMNiceInfo: java.lang.String getCellInfo()>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.westriversw.AdManager.AdManagerMain$GetWhichThread: void run()>	Permission:android.permission.INTERNET
<com.westriversw.AdManager.Notice$NoticeThread: void run()>	Permission:android.permission.READ_PHONE_STATE	Permission:android.permission.INTERNET
<com.westriversw.AdManager.SendHTTPMessageEncode$SendHTTPMessageThread: void run()>	Permission:android.permission.INTERNET
<org.anddev.andengine.audio.music.Music: void resume()>	Permission:android.permission.WAKE_LOCK
<com.google.ads.util.AdUtil: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<org.anddev.andengine.audio.music.Music: void release()>	Permission:android.permission.WAKE_LOCK
<com.google.ads.internal.AdVideoView: void b()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.commons.internal.IMLocationMonitor: void startListening(android.content.Context)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.inmobi.androidsdk.ai.container.IMWebView$11$2: boolean onKey(android.view.View,int,android.view.KeyEvent)>	Permission:android.permission.WAKE_LOCK
<com.westriversw.svsm.GameScene: void SendInfo()>	Permission:android.permission.READ_PHONE_STATE
<com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getUserAgent(android.content.Context)>	Permission:android.permission.INTERNET
<org.anddev.andengine.engine.Engine: void enableLocationSensor(android.content.Context,org.anddev.andengine.sensor.location.ILocationListener,org.anddev.andengine.sensor.location.LocationSensorOptions)>	Permission:android.permission.ACCESS_FINE_LOCATION
<com.westriversw.AdManager.SendRecvHTTPMessageEncode: void Send(java.lang.String,java.lang.String)>	Permission:android.permission.INTERNET
<com.feelingk.iap.util.CommonF: java.lang.String getMDN(android.content.Context,int)>	Permission:android.permission.READ_PHONE_STATE
<com.westriversw.AdManager.AdManager: void AdManagerDataCheating(java.lang.String)>	Permission:android.permission.READ_PHONE_STATE	Permission:android.permission.INTERNET
<org.anddev.andengine.opengl.texture.atlas.bitmap.source.BitmapTextureSource: android.graphics.Bitmap onLoadBitmap(android.graphics.Bitmap$Config)>	Permission:android.permission.INTERNET
<com.westriversw.svsm.GameActivity$SvsMPurchaseObserver: void onPurchaseStateChange(com.westriversw.svsm.Consts$PurchaseState,java.lang.String,int,long,java.lang.String)>	Permission:android.permission.READ_PHONE_STATE
<com.google.ads.internal.AdVideoView: void d()>	Permission:android.permission.WAKE_LOCK
<com.westriversw.AdManager.DataEncrypt: void Cheating(int)>	Permission:android.permission.READ_PHONE_STATE	Permission:android.permission.INTERNET
<org.anddev.andengine.engine.Engine: void vibrate(long[],int)throwsjava.lang.IllegalStateException>	Permission:android.permission.VIBRATE
<org.anddev.andengine.audio.music.Music: void pause()>	Permission:android.permission.WAKE_LOCK
<com.westriversw.svsm.GameActivity: void onActivityResult(int,int,android.content.Intent)>	Permission:android.permission.READ_PHONE_STATE
<com.inmobi.androidsdk.ai.container.IMWebView: public com.inmobi.androidsdk.ai.container.IMWebView(android.content.Context,com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener,boolean,boolean)>	Permission:android.permission.INTERNET
<com.google.ads.internal.AdWebView: public com.google.ads.internal.AdWebView(com.google.ads.m,com.google.ads.AdSize)>	Permission:android.permission.INTERNET
<com.westriversw.AdManager.BitCount$BitCountThread: void run()>	Permission:android.permission.INTERNET
<net.daum.adam.publisher.impl.d$1: void run()>	Permission:android.permission.INTERNET
<org.anddev.andengine.audio.music.Music: void play()>	Permission:android.permission.WAKE_LOCK
<com.google.ads.internal.AdVideoView: void e()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.commons.internal.InternalSDKUtil: boolean checkNetworkAvailibility(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.feelingk.iap.IAPActivity$36: void onServiceStateChanged(android.telephony.ServiceState)>	Permission:android.permission.ACCESS_COARSE_LOCATION
<com.google.ads.ac: void run()>	Permission:android.permission.INTERNET
<com.google.ads.util.AdUtil: java.lang.String i(android.content.Context)>	Permission:android.permission.INTERNET
<com.inmobi.androidsdk.ai.controller.JSUtilityController$2: void run()>	Permission:android.permission.INTERNET
<com.inmobi.androidsdk.ai.controller.util.IMAVPlayer: void pause()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.ai.container.IMWebView: public com.inmobi.androidsdk.ai.container.IMWebView(android.content.Context,com.inmobi.androidsdk.ai.container.IMWebView$IMWebViewListener)>	Permission:android.permission.INTERNET
<com.google.ads.internal.f$1: java.net.HttpURLConnection a(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getConnectivityType(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<net.daum.adam.publisher.impl.k: android.graphics.Bitmap b(java.lang.String)>	Permission:android.permission.INTERNET
<mediba.ad.sdk.android.openx.MasAdClickWebview: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.inmobi.androidsdk.ai.container.IMWebView: public com.inmobi.androidsdk.ai.container.IMWebView(android.content.Context,android.util.AttributeSet)>	Permission:android.permission.INTERNET
<com.google.ads.ac: java.net.HttpURLConnection a(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<org.anddev.andengine.engine.Engine: void vibrate(long)throwsjava.lang.IllegalStateException>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.ai.container.IMWebView$12: void onCompletion(android.media.MediaPlayer)>	Permission:android.permission.WAKE_LOCK
<com.feelingk.iap.net.IAPBase: boolean connect(int,java.lang.String,java.lang.String)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.westriversw.svsm.GCMIntentService: void onRegistered(android.content.Context,java.lang.String)>	Permission:android.permission.READ_PHONE_STATE
<net.daum.adam.publisher.AdInterstitial: public net.daum.adam.publisher.AdInterstitial(android.app.Activity,java.lang.String,net.daum.adam.publisher.AdInfo)>	Permission:android.permission.INTERNET
<net.daum.adam.publisher.AdView: public net.daum.adam.publisher.AdView(android.content.Context,android.util.AttributeSet,int)>	Permission:android.permission.INTERNET
<com.feelingk.iap.net.IAPBase$CallSendBPData: byte[] call()throwsjava.lang.Exception>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.google.android.gcm.GCMBaseIntentService: void onHandleIntent(android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.ai.controller.util.IMAVPlayer: void start()>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.ai.container.IMWebView$11: void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)>	Permission:android.permission.WAKE_LOCK
<com.google.android.gcm.GCMBaseIntentService: void runIntentInService(android.content.Context,android.content.Intent,java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.inmobi.androidsdk.impl.IMNiceInfo: void scanWifiAP()>	Permission:android.permission.ACCESS_WIFI_STATE	Permission:android.permission.CHANGE_WIFI_STATE
<com.feelingk.iap.util.CommonF: java.lang.String getIMEI(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
