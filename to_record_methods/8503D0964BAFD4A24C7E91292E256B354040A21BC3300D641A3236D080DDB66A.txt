<com.android.vending.expansion.downloader.impl.DownloadNotification: void onDownloadProgress(com.android.vending.expansion.downloader.DownloadProgressInfo)>	Permission:android.permission.VIBRATE
<com.fortumo.android.ef: void i(android.content.Context)>	Permission:android.permission.ACCESS_COARSE_LOCATION
<com.twsick.c.e: com.twsick.c.g k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.flurry.android.FlurryFullscreenTakeoverActivity: void onPause()>	Permission:android.permission.WAKE_LOCK
<com.fortumo.android.ef: boolean d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.arellomobile.android.push.utils.RegisterBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.BROADCAST_STICKY
<com.twsick.teian.r: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.arellomobile.android.push.utils.notification.Helper: android.graphics.Bitmap tryToGetBitmapFromInternet(java.lang.String,android.content.Context,int)>	Permission:android.permission.INTERNET
<com.fortumo.android.ef: java.lang.String g(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.twsick.SasanAawn: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.twsick.SasanAawn: void a()>	Permission:android.permission.WAKE_LOCK
<com.twsick.p: java.lang.String d(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.flurry.android.FlurryWallet: java.lang.String generateDeviceId()>	Permission:android.permission.READ_PHONE_STATE
<com.flurry.android.FlurryFullscreenTakeoverActivity: void onPrepared(android.media.MediaPlayer)>	Permission:android.permission.WAKE_LOCK
<com.g5e.KDActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.WRITE_SETTINGS
<com.twsick.p: java.lang.String c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.twsick.SasanAawn: void a(android.content.Context,android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.twsick.teian.r: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<com.android.vending.expansion.downloader.SystemFacade: boolean isNetworkRoaming()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.android.vending.expansion.downloader.impl.DownloadNotification: void onDownloadStateChanged(int)>	Permission:android.permission.VIBRATE
<com.twsick.teian.c.e: com.twsick.teian.c.g k()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.twsick.teian.c.e: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.fortumo.android.dd: com.fortumo.android.dh a(com.fortumo.android.dg)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.arellomobile.android.push.utils.GeneralUtils: java.lang.String getDeviceUUID(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.flurry.android.cf: public com.flurry.android.cf(android.content.Context,java.lang.String)>	Permission:android.permission.INTERNET
<com.twsick.teian.b.k: public com.twsick.teian.b.k(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.flurry.android.caching.l: com.flurry.android.caching.m i(com.flurry.android.caching.ObjectOperationData)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.android.vending.expansion.downloader.impl.DownloaderService: void onHandleIntent(android.content.Intent)>	Permission:android.permission.ACCESS_WIFI_STATE
<com.twsick.SasanAawn: boolean a(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.android.vending.expansion.downloader.SystemFacade: java.lang.Integer getActiveNetworkType()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.arellomobile.android.push.GeoLocationService: void onDestroy()>	Permission:android.permission.WAKE_LOCK
<com.android.vending.expansion.downloader.impl.DownloadThread: void run()>	Permission:android.permission.WAKE_LOCK
<com.twsick.p: void a(android.content.Context,int,java.lang.String,int,int,android.content.Intent,java.lang.String,int)>	Permission:android.permission.VIBRATE
<com.g5e.KDVideoView: void start()>	Permission:android.permission.WAKE_LOCK
<com.fortumo.android.ef: java.lang.String a(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.fortumo.android.ef: java.lang.String f(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.android.vending.expansion.downloader.impl.DownloaderService: void pollNetworkState()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.twsick.SasanAawn: void a(android.app.Service,int)>	Permission:android.permission.WAKE_LOCK
<com.flurry.android.ft: void initLayout(android.content.Context)>	Permission:android.permission.INTERNET
<com.g5e.KDNativeNotification$AlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>	Permission:android.permission.VIBRATE
<com.g5e.KDWebView$SubWindow$1:  com.g5e.KDWebView$SubWindow$1(com.g5e.KDWebView$SubWindow,android.content.Context)>	Permission:android.permission.INTERNET
<com.fortumo.android.ed: void a(java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>	Permission:android.permission.SEND_SMS
<com.g5e.KDVideoView: void pause()>	Permission:android.permission.WAKE_LOCK
<com.g5e.KDNativeWebWindow$5: void run()>	Permission:android.permission.INTERNET
<com.twsick.teian.d.c: java.lang.String a(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.android.vending.expansion.downloader.SystemFacade: void postNotification(long,android.app.Notification)>	Permission:android.permission.VIBRATE
<com.twsick.e.h: void a(android.content.Context,android.content.Intent,int,com.twsick.d.h,int,boolean,boolean)>	Permission:android.permission.VIBRATE
<com.flurry.android.ft: boolean shouldRotate()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.fortumo.android.eq: android.app.Dialog a(java.lang.String,java.lang.String[],android.view.View$OnClickListener)>	Permission:android.permission.INTERNET
<com.fiksu.asotracking.FiksuDeviceSettingsManager: java.lang.String getDeviceId(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.flurry.org.codehaus.jackson.JsonFactory: java.io.InputStream _optimizedStreamFromURL(java.net.URL)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.arellomobile.android.push.utils.NetworkUtils: com.arellomobile.android.push.utils.NetworkUtils$NetworkResult makeRequest(java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)throwsjava.lang.Exception>	Permission:android.permission.INTERNET
<com.fortumo.android.lib.model.Widget: android.app.Dialog a(android.content.Context,com.fortumo.android.lib.model.w,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,int)>	Permission:android.permission.INTERNET
<com.facebook.android.Util: java.lang.String openUrl(java.lang.String,java.lang.String,android.os.Bundle)throwsjava.net.MalformedURLException,java.io.IOException>	Permission:android.permission.INTERNET
<com.flurry.android.FlurryAgent: byte[] fetchHashedImei(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.twsick.c.e: boolean l()>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.fortumo.android.cx: android.view.View a(android.content.Context,com.fortumo.android.er)>	Permission:android.permission.INTERNET
<com.arellomobile.android.push.PushWebview: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.twsick.d.g: protected com.twsick.d.g(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.google.android.gcm.GCMBaseIntentService: void onHandleIntent(android.content.Intent)>	Permission:android.permission.WAKE_LOCK
<com.g5e.KDWebView: public com.g5e.KDWebView(android.content.Context)>	Permission:android.permission.INTERNET
<com.fortumo.android.FortumoActivity: void onCreate(android.os.Bundle)>	Permission:android.permission.INTERNET
<com.twsick.teian.d.c: java.lang.String f(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.twsick.e.h: java.lang.String b(android.content.Context)>	Permission:android.permission.READ_PHONE_STATE
<com.google.android.gcm.GCMBaseIntentService: void runIntentInService(android.content.Context,android.content.Intent,java.lang.String)>	Permission:android.permission.WAKE_LOCK
<com.g5e.KDVideoView: void stopPlayback()>	Permission:android.permission.WAKE_LOCK
<com.mobileapptracker.d: void run()>	Permission:android.permission.INTERNET
<com.twsick.teian.r: boolean c(android.content.Context)>	Permission:android.permission.ACCESS_NETWORK_STATE
