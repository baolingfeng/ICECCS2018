<com.hedami.musicplayerremix.ArtistdetailsRBFActivity$11: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.hedami.musicplayerremix.MediaService$30: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.AlbumsongsRBFActivity$6: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompatGingerbread: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.hedami.musicplayerremix.MediaService$14: void run()>	Permission:android.permission.VIBRATE
<com.hedami.musicplayerremix.MediaService$MediaplayerHandler: void handleMessage(android.os.Message)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.KaraokeDetailsDialogFragment: void onDestroyView()>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.ExtAudioRecorder: public com.hedami.musicplayerremix.ExtAudioRecorder(boolean,int,int,int,int)>	Permission:android.permission.RECORD_AUDIO
<com.hedami.musicplayerremix.RemixFragmentActivity$61: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.RemixFragmentActivity$59: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.MediaService$MultiPlayer$1: void onCompletion(android.media.MediaPlayer)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.HTTPAsyncTask: java.lang.String doInBackground(java.lang.String...)>	Permission:android.permission.INTERNET
<com.hedami.musicplayerremix.LyricsRBFActivity$AudioRecordAsyncTask: java.lang.Boolean doInBackground(java.lang.String...)>	Permission:android.permission.BLUETOOTH
<com.hedami.musicplayerremix.MediaService$CompatMediaPlayer: void onCompletion(android.media.MediaPlayer)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.MediaService: void onDestroy()>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompat: android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.hedami.musicplayerremix.RemixFragmentActivity$18: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.ImageSearchHTTPTask$AlbumArtAsyncTask: java.lang.Boolean doInBackground(com.hedami.musicplayerremix.ImageSearchHTTPTask$ViewHolder...)>	Permission:android.permission.INTERNET
<com.hedami.musicplayerremix.ComposersongsRBFActivity$8: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.ExtAudioRecorder: void reset()>	Permission:android.permission.RECORD_AUDIO
<com.hedami.musicplayerremix.ArtistdetailsRBFActivity$9: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.AlbumartsDialogFragment: void updateNotification(int,int)>	Permission:android.permission.VIBRATE
<android.support.v4.net.ConnectivityManagerCompatJellyBean: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.hedami.musicplayerremix.GenredetailsRBFActivity$9: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.GenredetailsRBFActivity$10: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.KaraokeDetailsDialogFragment$3: void onClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.MediaService: void destroyMusicControlsOverlay(boolean)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.ArtistdetailsRBFActivity$10: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.AlbumartsDialogFragment: void createNotification(java.lang.String)>	Permission:android.permission.VIBRATE
<com.hedami.musicplayerremix.JSONAsyncTask: java.lang.String doInBackground(java.lang.String...)>	Permission:android.permission.INTERNET
<com.hedami.musicplayerremix.GenredetailsRBFActivity$11: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.AlbumartsDialogFragment$AlbumArtAsyncTask: java.lang.Boolean doInBackground(java.lang.String...)>	Permission:android.permission.INTERNET
<de.umass.lastfm.Caller: java.net.HttpURLConnection openConnection(java.lang.String)throwsjava.io.IOException>	Permission:android.permission.INTERNET
<com.hedami.musicplayerremix.ComposersongsRBFActivity$9: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<com.hedami.musicplayerremix.MusicUtils: void setRingtone(android.content.Context,long)>	Permission:android.permission.WRITE_SETTINGS
<com.hedami.musicplayerremix.AlbumsongsRBFActivity$7: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
<android.support.v4.net.ConnectivityManagerCompatHoneycombMR2: boolean isActiveNetworkMetered(android.net.ConnectivityManager)>	Permission:android.permission.ACCESS_NETWORK_STATE
<com.hedami.musicplayerremix.RemixFragmentActivity$60: boolean onLongClick(android.view.View)>	Permission:android.permission.WAKE_LOCK
